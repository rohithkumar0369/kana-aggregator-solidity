/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LayerZeroFacet,
  LayerZeroFacetInterface,
} from "../../../src/Facets/LayerZeroFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILayerZeroEndpoint",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "KanaTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IKana.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "KanaTransferStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "PT_SEND",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct IKana.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "toAddress",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
        ],
        internalType: "struct LayerZeroFacet.LzData",
        name: "_lzData",
        type: "tuple",
      },
    ],
    name: "startBridgeTokensViaLayerZeroBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct IKana.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapAndStartBridgeTokensViaOmniBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611e51380380611e5183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611dbf6100926000396000818161041301526104840152611dbf6000f3fe6080604052600436106100345760003560e01c80634c42899a14610039578063925ba5f414610065578063ea1298f21461007a575b600080fd5b34801561004557600080fd5b5061004e600081565b60405161ffff909116815260200160405180910390f35b610078610073366004611903565b61008d565b005b61007861008836600461196e565b6101b1565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b8054600019016100d1576040516329f745a760e01b815260040160405180910390fd5b600181553360006100e23447611a1e565b9050848061010001511561010957604051631437241760e21b815260040160405180910390fd5b858061012001511561012e57604051631437241760e21b815260040160405180910390fd5b868060c001516000036101545760405163162908e360e11b815260040160405180910390fd5b61016688608001518960c001516102d3565b61017088886103d5565b5047915060009050828211610186576000610190565b6101908383611a1e565b905080156101a4576101a460008583610536565b5050600090925550505050565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b8054600019016101f5576040516329f745a760e01b815260040160405180910390fd5b600181553360006102063447611a1e565b90508580610100015161022c57604051631437241760e21b815260040160405180910390fd5b868061012001511561025157604051631437241760e21b815260040160405180910390fd5b878060c001516000036102775760405163162908e360e11b815260040160405180910390fd5b61028c89600001518a60c001518a8a3361055a565b60c08a015250479150600090508282116102a75760006102b1565b6102b18383611a1e565b905080156102c5576102c560008583610536565b505060009092555050505050565b6001600160a01b03821661030657803410156103025760405163162908e360e11b815260040160405180910390fd5b5050565b806000036103275760405163162908e360e11b815260040160405180910390fd5b6040516370a0823160e01b81523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103929190611a31565b9050818110156103c45760405163cf47918160e01b815260048101839052602481018290526044015b60405180910390fd5b6103d08333308561065e565b505050565b816103eb81608001516001600160a01b03161590565b1561040957604051635ded599760e01b815260040160405180910390fd5b61043c83608001517f00000000000000000000000000000000000000000000000000000000000000008560c001516107c7565b60a083015160408051600060208281018290529282019390935290840135606082015260800160408051601f1981840301815291815260e08601519192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c580310091860135906104b98780611a4a565b866104ca60808b0160608c01611a98565b6000604051806020016040528060008152506040518963ffffffff1660e01b81526004016104fe9796959493929190611b05565b6000604051808303818588803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b505050505050505050565b6001600160a01b03831615610550576103d083838361089b565b6103d08282610965565b60008280820361057d57604051630503c3ed60e01b815260040160405180910390fd5b6000858561058c600185611a1e565b81811061059b5761059b611b78565b90506020028101906105ad9190611b8e565b6105be906080810190606001611a98565b905060006105cb82610a2a565b90506001600160a01b0382166105e8576105e53482611a1e565b90505b60006105f48888610ab0565b90506106008888610baf565b61060d8a89898985610c10565b60008261061985610a2a565b6106239190611a1e565b905089811015610650576040516309d709cf60e21b8152600481018b9052602481018290526044016103bb565b9a9950505050505050505050565b6001600160a01b0384166106855760405163346fafc360e21b815260040160405180910390fd5b6001600160a01b0382166106ac576040516321f7434560e01b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071b9190611a31565b905061072982868686610f44565b6040516370a0823160e01b81526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190611a31565b6107a19190611a1e565b146107bf5760405163162908e360e11b815260040160405180910390fd5b505050505050565b6001600160a01b0383166107da57505050565b6001600160a01b038216610801576040516363ba9bff60e01b815260040160405180910390fd5b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190611a31565b90508181101561089557610895848461089084600019611a1e565b610faf565b50505050565b6001600160a01b0383166108c25760405163346fafc360e21b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d9190611a31565b90508082111561095a5760405163cf47918160e01b815260048101839052602481018290526044016103bb565b610895848484611061565b6001600160a01b03821661098c576040516321f7434560e01b815260040160405180910390fd5b478111156109b65760405163cf47918160e01b8152600481018290524760248201526044016103bb565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a03576040519150601f19603f3d011682016040523d82523d6000602084013e610a08565b606091505b50509050806103d057604051635a04673760e01b815260040160405180910390fd5b60006001600160a01b03821615610aa8576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa39190611a31565b610aaa565b475b92915050565b60608160008167ffffffffffffffff811115610ace57610ace6116d2565b604051908082528060200260200182016040528015610af7578160200160208202803683370190505b5090506000805b83811015610ba457868682818110610b1857610b18611b78565b9050602002810190610b2a9190611b8e565b610b3b906080810190606001611a98565b9150610b4682610a2a565b838281518110610b5857610b58611b78565b60209081029190910101526001600160a01b038216610b9c5734838281518110610b8457610b84611b78565b60200260200101818151610b989190611a1e565b9052505b600101610afe565b509095945050505050565b60005b818110156103d0576000838383818110610bce57610bce611b78565b9050602002810190610be09190611b8e565b610be990611bae565b90508060c0015115610c0757610c07816040015182608001516102d3565b50600101610bb2565b838383838260018114610e785760008585610c2c600185611a1e565b818110610c3b57610c3b611b78565b9050602002810190610c4d9190611b8e565b610c5e906080810190606001611a98565b9050600089815b81811015610dbe57368d8d83818110610c8057610c80611b78565b9050602002810190610c929190611b8e565b9050610cb4610ca76060830160408401611a98565b6001600160a01b03161590565b80610d0a5750610d0a610ccd6040830160208401611a98565b6001600160a01b031660009081527fbcebf0a9ab66af8ebd1c7c5806111adc185225ddfcbffe27e46ed5ac66b89048602052604090205460ff1690565b8015610d215750610d21610ccd6020830183611a98565b8015610d8e5750610d8e610d3860a0830183611a4a565b610d4791600491600091611c53565b610d5091611c7d565b6001600160e01b03191660009081527fbcebf0a9ab66af8ebd1c7c5806111adc185225ddfcbffe27e46ed5ac66b89049602052604090205460ff1690565b610dab57604051632514e60160e21b815260040160405180910390fd5b610db58f82611091565b50600101610c65565b505060005b610dce600185611a1e565b811015610e70576000888883818110610de957610de9611b78565b9050602002810190610dfb9190611b8e565b610e0c906080810190606001611a98565b9050836001600160a01b0316816001600160a01b031614610e6757858281518110610e3957610e39611b78565b6020026020010151610e4a82610a2a565b610e549190611a1e565b92508215610e6757610e67818885610536565b50600101610dc3565b505050610f38565b8760005b81811015610f3557368b8b83818110610e9757610e97611b78565b9050602002810190610ea99190611b8e565b9050610ebe610ca76060830160408401611a98565b80610ed75750610ed7610ccd6040830160208401611a98565b8015610eee5750610eee610ccd6020830183611a98565b8015610f055750610f05610d3860a0830183611a4a565b610f2257604051632514e60160e21b815260040160405180910390fd5b610f2c8d82611091565b50600101610e7c565b50505b50505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108959085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611328565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190611a31565b61102e9190611cad565b6040516001600160a01b03851660248201526044810182905290915061089590859063095ea7b360e01b90606401610f78565b6040516001600160a01b0383166024820152604481018290526103d090849063a9059cbb60e01b90606401610f78565b6110a76110a16020830183611a98565b3b151590565b6110c4576040516303777f6960e51b815260040160405180910390fd5b608081013560008190036110eb5760405163391b81e760e21b815260040160405180910390fd5b6000611100610ca76060850160408601611a98565b61110b576000611111565b82608001355b9050600061112d6111286060860160408701611a98565b610a2a565b905060006111446111286080870160608801611a98565b90508260000361117b5761117b6111616060870160408801611a98565b6111716040880160208901611a98565b87608001356107c7565b84608001358210156111ad5760405163cf47918160e01b815260808601356004820152602481018390526044016103bb565b6000806111bd6020880188611a98565b6001600160a01b0316856111d460a08a018a611a4a565b6040516111e2929190611cc0565b60006040518083038185875af1925050503d806000811461121f576040519150601f19603f3d011682016040523d82523d6000602084013e611224565b606091505b509150915081611255576000611239826113fa565b90508060405162461bcd60e51b81526004016103bb9190611cd0565b600061126a61112860808a0160608b01611a98565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b388961129b60208b018b611a98565b6112ab60608c0160408d01611a98565b6112bb60808d0160608e01611a98565b8c608001358987116112cd57866112d7565b6112d78a88611a1e565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b600061137d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114789092919063ffffffff16565b8051909150156103d0578080602001905181019061139b9190611ce3565b6103d05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103bb565b606060448251101561143f57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600061145b60048085516114539190611a1e565b85919061148f565b9050808060200190518101906114719190611d00565b9392505050565b60606114878484600085611559565b949350505050565b60608161149d81601f611cad565b10156114bc576040516323d5783d60e11b815260040160405180910390fd5b6114c68284611cad565b845110156114e757604051633b99b53d60e01b815260040160405180910390fd5b6060821580156115065760405191506000825260208201604052611550565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561153f578051835260209283019201611527565b5050858452601f01601f1916604052505b50949350505050565b6060824710156115ba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103bb565b600080866001600160a01b031685876040516115d69190611d77565b60006040518083038185875af1925050503d8060008114611613576040519150601f19603f3d011682016040523d82523d6000602084013e611618565b606091505b509150915061162987838387611634565b979650505050505050565b606083156116a357825160000361169c576001600160a01b0385163b61169c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103bb565b5081611487565b61148783838151156116b85781518083602001fd5b8060405162461bcd60e51b81526004016103bb9190611cd0565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171561170c5761170c6116d2565b60405290565b60405160e0810167ffffffffffffffff8111828210171561170c5761170c6116d2565b604051601f8201601f1916810167ffffffffffffffff8111828210171561175e5761175e6116d2565b604052919050565b600067ffffffffffffffff821115611780576117806116d2565b50601f01601f191660200190565b600082601f83011261179f57600080fd5b81356117b26117ad82611766565b611735565b8181528460208386010111156117c757600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146117f957600080fd5b50565b8035611807816117e4565b919050565b80151581146117f957600080fd5b80356118078161180c565b6000610140828403121561183857600080fd5b6118406116e8565b905081358152602082013567ffffffffffffffff8082111561186157600080fd5b61186d8583860161178e565b6020840152604084013591508082111561188657600080fd5b506118938482850161178e565b6040830152506118a5606083016117fc565b60608201526118b6608083016117fc565b608082015260a082013560a082015260c082013560c082015260e082013560e08201526101006118e781840161181a565b908201526101206118f983820161181a565b9082015292915050565b6000806040838503121561191657600080fd5b823567ffffffffffffffff8082111561192e57600080fd5b61193a86838701611825565b9350602085013591508082111561195057600080fd5b5083016080818603121561196357600080fd5b809150509250929050565b60008060006040848603121561198357600080fd5b833567ffffffffffffffff8082111561199b57600080fd5b6119a787838801611825565b945060208601359150808211156119bd57600080fd5b818601915086601f8301126119d157600080fd5b8135818111156119e057600080fd5b8760208260051b85010111156119f557600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052601160045260246000fd5b81810381811115610aaa57610aaa611a08565b600060208284031215611a4357600080fd5b5051919050565b6000808335601e19843603018112611a6157600080fd5b83018035915067ffffffffffffffff821115611a7c57600080fd5b602001915036819003821315611a9157600080fd5b9250929050565b600060208284031215611aaa57600080fd5b8135611471816117e4565b60005b83811015611ad0578181015183820152602001611ab8565b50506000910152565b60008151808452611af1816020860160208601611ab5565b601f01601f19169290920160200192915050565b61ffff8816815260c060208201528560c0820152858760e0830137600060e087830101526000601f19601f880116820160e0838203016040840152611b4d60e0820188611ad9565b6001600160a01b0387811660608601528616608085015283810360a085015290506106508185611ad9565b634e487b7160e01b600052603260045260246000fd5b6000823560de19833603018112611ba457600080fd5b9190910192915050565b600060e08236031215611bc057600080fd5b611bc8611712565b611bd1836117fc565b8152611bdf602084016117fc565b6020820152611bf0604084016117fc565b6040820152611c01606084016117fc565b60608201526080830135608082015260a083013567ffffffffffffffff811115611c2a57600080fd5b611c363682860161178e565b60a083015250611c4860c0840161181a565b60c082015292915050565b60008085851115611c6357600080fd5b83861115611c7057600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015611ca55780818660040360031b1b83161692505b505092915050565b80820180821115610aaa57610aaa611a08565b8183823760009101908152919050565b6020815260006114716020830184611ad9565b600060208284031215611cf557600080fd5b81516114718161180c565b600060208284031215611d1257600080fd5b815167ffffffffffffffff811115611d2957600080fd5b8201601f81018413611d3a57600080fd5b8051611d486117ad82611766565b818152856020838501011115611d5d57600080fd5b611d6e826020830160208601611ab5565b95945050505050565b60008251611ba4818460208701611ab556fea2646970667358221220b510633e0875d38712d2e2d3359a28fcc790c52696fcebe5633450a257c1d24764736f6c63430008110033";

type LayerZeroFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LayerZeroFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LayerZeroFacet__factory extends ContractFactory {
  constructor(...args: LayerZeroFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LayerZeroFacet> {
    return super.deploy(_router, overrides || {}) as Promise<LayerZeroFacet>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): LayerZeroFacet {
    return super.attach(address) as LayerZeroFacet;
  }
  override connect(signer: Signer): LayerZeroFacet__factory {
    return super.connect(signer) as LayerZeroFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LayerZeroFacetInterface {
    return new utils.Interface(_abi) as LayerZeroFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LayerZeroFacet {
    return new Contract(address, _abi, signerOrProvider) as LayerZeroFacet;
  }
}
