/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../src/Facets/DiamondCutFacet";

const _abi = [
  {
    inputs: [],
    name: "CalldataEmptyButInitNotZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FacetAddressIsNotZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FacetAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FacetContainsNoCode",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionIsImmutable",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectFacetCutAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InitReverted",
    type: "error",
  },
  {
    inputs: [],
    name: "InitZeroButCalldataNotEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSelectorsInFace",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611030806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610b61565b610045565b005b61004d61009e565b61009761005a8587610ca7565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020610fdb833981519152600401546001600160a01b031633146100d9576040516304efaedf60e31b815260040160405180910390fd5b565b60005b83518110156102585760008482815181106100fb576100fb610deb565b60200260200101516020015190506000600281111561011c5761011c610e01565b81600281111561012e5761012e610e01565b0361017c5761017785838151811061014857610148610deb565b60200260200101516000015186848151811061016657610166610deb565b6020026020010151604001516102a3565b61024f565b600181600281111561019057610190610e01565b036101d9576101778583815181106101aa576101aa610deb565b6020026020010151600001518684815181106101c8576101c8610deb565b6020026020010151604001516103bc565b60028160028111156101ed576101ed610e01565b036102365761017785838151811061020757610207610deb565b60200260200101516000015186848151811061022557610225610deb565b6020026020010151604001516104e5565b60405163e548e6b560e01b815260040160405180910390fd5b506001016100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161028c93929190610e67565b60405180910390a161029e82826105ab565b505050565b80516000036102c5576040516307bc559560e41b815260040160405180910390fd5b600080516020610fdb8339815191526001600160a01b0383166102fb57604051636347641d60e11b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036103315761033182856106c0565b60005b835181101561009757600084828151811061035157610351610deb565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156103a25760405163a023275d60e01b815260040160405180910390fd5b6103ae8583868a610711565b505060019182019101610334565b80516000036103de576040516307bc559560e41b815260040160405180910390fd5b600080516020610fdb8339815191526001600160a01b03831661041457604051636347641d60e11b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361044a5761044a82856106c0565b60005b835181101561009757600084828151811061046a5761046a610deb565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036104c05760405163a023275d60e01b815260040160405180910390fd5b6104cb8582846107b1565b6104d78583868a610711565b50506001918201910161044d565b8051600003610507576040516307bc559560e41b815260040160405180910390fd5b600080516020610fdb8339815191526001600160a01b0383161561053e57604051633ce4ef9160e11b815260040160405180910390fd5b60005b82518110156105a557600083828151811061055e5761055e610deb565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661059b8482846107b1565b5050600101610541565b50505050565b6001600160a01b0382166105dd578051156105d9576040516304c08b4360e51b815260040160405180910390fd5b5050565b80516000036105ff5760405163211002b360e11b815260040160405180910390fd5b6001600160a01b03821630146106185761061882610ad9565b600080836001600160a01b0316836040516106339190610f67565b600060405180830381855af49150503d806000811461066e576040519150601f19603f3d011682016040523d82523d6000602084013e610673565b606091505b5091509150816105a5578051156106a7578060405162461bcd60e51b815260040161069e9190610f83565b60405180910390fd5b60405163c53ebed560e01b815260040160405180910390fd5b6106c981610ad9565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166107d857604051631535ac5f60e31b815260040160405180910390fd5b306001600160a01b038316036108015760405163c3c5ec3760e01b815260040160405180910390fd5b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929161085091610f9d565b9050808214610942576001600160a01b0384166000908152600186016020526040812080548390811061088557610885610deb565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b9250829190859081106108d6576108d6610deb565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384166000908152600186016020526040902080548061096b5761096b610fc4565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036100975760028501546000906109ce90600190610f9d565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610a7d576000876002018381548110610a0d57610a0d610deb565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610a3e57610a3e610deb565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610a9057610a90610fc4565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b60008190036105d9576040516271a80360e91b815260040160405180910390fd5b80356001600160a01b0381168114610b1357600080fd5b919050565b60008083601f840112610b2a57600080fd5b50813567ffffffffffffffff811115610b4257600080fd5b602083019150836020828501011115610b5a57600080fd5b9250929050565b600080600080600060608688031215610b7957600080fd5b853567ffffffffffffffff80821115610b9157600080fd5b818801915088601f830112610ba557600080fd5b813581811115610bb457600080fd5b8960208260051b8501011115610bc957600080fd5b60208301975080965050610bdf60208901610afc565b94506040880135915080821115610bf557600080fd5b50610c0288828901610b18565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610c4c57610c4c610c13565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c7b57610c7b610c13565b604052919050565b600067ffffffffffffffff821115610c9d57610c9d610c13565b5060051b60200190565b6000610cba610cb584610c83565b610c52565b83815260208082019190600586811b860136811115610cd857600080fd5b865b81811015610dde57803567ffffffffffffffff80821115610cfb5760008081fd5b818a01915060608236031215610d115760008081fd5b610d19610c29565b610d2283610afc565b81528683013560038110610d365760008081fd5b8188015260408381013583811115610d4e5760008081fd5b939093019236601f850112610d6557600092508283fd5b83359250610d75610cb584610c83565b83815292871b84018801928881019036851115610d925760008081fd5b948901945b84861015610dc75785356001600160e01b031981168114610db85760008081fd5b82529489019490890190610d97565b918301919091525088525050948301948301610cda565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b83811015610e32578181015183820152602001610e1a565b50506000910152565b60008151808452610e53816020860160208601610e17565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610f3757898403607f19018652815180516001600160a01b03168552838101518986019060038110610ed657634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610f225783516001600160e01b0319168252928601926001929092019190860190610ef8565b50978501979550505090820190600101610e90565b50506001600160a01b038a16908801528681036040880152610f598189610e3b565b9a9950505050505050505050565b60008251610f79818460208701610e17565b9190910192915050565b602081526000610f966020830184610e3b565b9392505050565b81810381811115610fbe57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220e417fcf8308c404b97fcfcdb08dacff8e8e48fbac4bd7e538e6c851bd640eb7464736f6c63430008110033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
