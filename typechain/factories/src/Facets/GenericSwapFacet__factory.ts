/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GenericSwapFacet,
  GenericSwapFacetInterface,
} from "../../../src/Facets/GenericSwapFacet";

const _abi = [
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "CumulativeSlippageTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "IsNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAssetTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapDataProvided",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "integrator",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "referrer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
    ],
    name: "KanaSwappedGeneric",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receivingAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "KanaTransferCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IKana.BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "KanaTransferStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_fee",
        type: "uint32",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_integrator",
        type: "string",
      },
      {
        internalType: "string",
        name: "_referrer",
        type: "string",
      },
      {
        internalType: "address payable",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
    ],
    name: "swapTokensGeneric",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c18806100206000396000f3fe6080604052600436106100345760003560e01c80631ab971ab146100395780634630a0d81461005b578063ced72f871461006e575b600080fd5b34801561004557600080fd5b5061005961005436600461159e565b610097565b005b610059610069366004611635565b6100fd565b34801561007a57600080fd5b506000546040805163ffffffff9092168252519081900360200190f35b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031633146100e1576040516365b023fd60e01b815260040160405180910390fd5b6000805463ffffffff191663ffffffff92909216919091179055565b83600061010a344761173c565b7fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b80549192509060001901610152576040516329f745a760e01b815260040160405180910390fd5b600181556001600160a01b03871661017d57604051631e4ec46b60e01b815260040160405180910390fd5b600061018c8d8888888c6102dc565b90506000868661019d60018261173c565b8181106101ac576101ac61174f565b90506020028101906101be9190611765565b6101cf906080810190606001611785565b905060006101dc836103e5565b6101e6908461173c565b90506101f3828b83610410565b8e7ff759b8879b7c58816b62c8cb8572a777bed770ca90e4a5b3bb4c7a8f7e94cf138f8f8f8f8d8d600081811061022c5761022c61174f565b905060200281019061023e9190611765565b61024f906060810190604001611785565b888f8f60008181106102635761026361174f565b90506020028101906102759190611765565b608001358b60405161028e9897969594939291906117cb565b60405180910390a250506000918290555047908282116102af5760006102b9565b6102b9838361173c565b905080156102cd576102cd60008583610410565b50505050505050505050505050565b6000828082036102ff57604051630503c3ed60e01b815260040160405180910390fd5b6000858561030e60018561173c565b81811061031d5761031d61174f565b905060200281019061032f9190611765565b610340906080810190606001611785565b9050600061034d82610439565b90506001600160a01b03821661036a57610367348261173c565b90505b600061037688886104bf565b905061038288886105be565b61038f8a8989898561061f565b60008261039b85610439565b6103a5919061173c565b9050898110156103d7576040516309d709cf60e21b8152600481018b9052602481018290526044015b60405180910390fd5b9a9950505050505050505050565b600080548190612710906103ff9063ffffffff1685611823565b610409919061183a565b9392505050565b6001600160a01b0383161561042f5761042a838383610953565b505050565b61042a8282610a23565b60006001600160a01b038216156104b7576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b2919061185c565b6104b9565b475b92915050565b60608160008167ffffffffffffffff8111156104dd576104dd611875565b604051908082528060200260200182016040528015610506578160200160208202803683370190505b5090506000805b838110156105b3578686828181106105275761052761174f565b90506020028101906105399190611765565b61054a906080810190606001611785565b915061055582610439565b8382815181106105675761056761174f565b60209081029190910101526001600160a01b0382166105ab57348382815181106105935761059361174f565b602002602001018181516105a7919061173c565b9052505b60010161050d565b509095945050505050565b60005b8181101561042a5760008383838181106105dd576105dd61174f565b90506020028101906105ef9190611765565b6105f89061197c565b90508060c00151156106165761061681604001518260800151610ae8565b506001016105c1565b838383838260018114610887576000858561063b60018561173c565b81811061064a5761064a61174f565b905060200281019061065c9190611765565b61066d906080810190606001611785565b9050600089815b818110156107cd57368d8d8381811061068f5761068f61174f565b90506020028101906106a19190611765565b90506106c36106b66060830160408401611785565b6001600160a01b03161590565b8061071957506107196106dc6040830160208401611785565b6001600160a01b031660009081527fbcebf0a9ab66af8ebd1c7c5806111adc185225ddfcbffe27e46ed5ac66b89048602052604090205460ff1690565b801561073057506107306106dc6020830183611785565b801561079d575061079d61074760a0830183611a21565b61075691600491600091611a68565b61075f91611a92565b6001600160e01b03191660009081527fbcebf0a9ab66af8ebd1c7c5806111adc185225ddfcbffe27e46ed5ac66b89049602052604090205460ff1690565b6107ba57604051632514e60160e21b815260040160405180910390fd5b6107c48f82610be0565b50600101610674565b505060005b6107dd60018561173c565b81101561087f5760008888838181106107f8576107f861174f565b905060200281019061080a9190611765565b61081b906080810190606001611785565b9050836001600160a01b0316816001600160a01b031614610876578582815181106108485761084861174f565b602002602001015161085982610439565b610863919061173c565b9250821561087657610876818885610410565b506001016107d2565b505050610947565b8760005b8181101561094457368b8b838181106108a6576108a661174f565b90506020028101906108b89190611765565b90506108cd6106b66060830160408401611785565b806108e657506108e66106dc6040830160208401611785565b80156108fd57506108fd6106dc6020830183611785565b8015610914575061091461074760a0830183611a21565b61093157604051632514e60160e21b815260040160405180910390fd5b61093b8d82610be0565b5060010161088b565b50505b50505050505050505050565b6001600160a01b03831661097a5760405163346fafc360e21b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e5919061185c565b905080821115610a125760405163cf47918160e01b815260048101839052602481018290526044016103ce565b610a1d848484610e77565b50505050565b6001600160a01b038216610a4a576040516321f7434560e01b815260040160405180910390fd5b47811115610a745760405163cf47918160e01b8152600481018290524760248201526044016103ce565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ac1576040519150601f19603f3d011682016040523d82523d6000602084013e610ac6565b606091505b505090508061042a57604051635a04673760e01b815260040160405180910390fd5b6001600160a01b038216610b1b5780341015610b175760405163162908e360e11b815260040160405180910390fd5b5050565b80600003610b3c5760405163162908e360e11b815260040160405180910390fd5b6040516370a0823160e01b81523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba7919061185c565b905081811015610bd45760405163cf47918160e01b815260048101839052602481018290526044016103ce565b61042a83333085610eda565b610bf6610bf06020830183611785565b3b151590565b610c13576040516303777f6960e51b815260040160405180910390fd5b60808101356000819003610c3a5760405163391b81e760e21b815260040160405180910390fd5b6000610c4f6106b66060850160408601611785565b610c5a576000610c60565b82608001355b90506000610c7c610c776060860160408701611785565b610439565b90506000610c93610c776080870160608801611785565b905082600003610cca57610cca610cb06060870160408801611785565b610cc06040880160208901611785565b8760800135611043565b8460800135821015610cfc5760405163cf47918160e01b815260808601356004820152602481018390526044016103ce565b600080610d0c6020880188611785565b6001600160a01b031685610d2360a08a018a611a21565b604051610d31929190611ac2565b60006040518083038185875af1925050503d8060008114610d6e576040519150601f19603f3d011682016040523d82523d6000602084013e610d73565b606091505b509150915081610da4576000610d8882611111565b90508060405162461bcd60e51b81526004016103ce9190611af6565b6000610db9610c7760808a0160608b01611785565b90507f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b3889610dea60208b018b611785565b610dfa60608c0160408d01611785565b610e0a60808d0160608e01611785565b8c60800135898711610e1c5786610e26565b610e268a8861173c565b604080519687526001600160a01b0395861660208801529385169386019390935292166060840152608083019190915260a08201524260c082015260e00160405180910390a1505050505050505050565b6040516001600160a01b03831660248201526044810182905261042a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611188565b6001600160a01b038416610f015760405163346fafc360e21b815260040160405180910390fd5b6001600160a01b038216610f28576040516321f7434560e01b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b03838116600483015285916000918316906370a0823190602401602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f97919061185c565b9050610fa58286868661125a565b6040516370a0823160e01b81526001600160a01b038581166004830152849183918516906370a0823190602401602060405180830381865afa158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611013919061185c565b61101d919061173c565b1461103b5760405163162908e360e11b815260040160405180910390fd5b505050505050565b6001600160a01b03831661105657505050565b6001600160a01b03821661107d576040516363ba9bff60e01b815260040160405180910390fd5b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156110cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f1919061185c565b905081811015610a1d57610a1d848461110c8460001961173c565b611292565b606060448251101561115657505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b6000611172600480855161116a919061173c565b859190611344565b9050808060200190518101906104099190611b29565b60006111dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661140e9092919063ffffffff16565b80519091501561042a57808060200190518101906111fb9190611ba0565b61042a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103ce565b6040516001600160a01b0380851660248301528316604482015260648101829052610a1d9085906323b872dd60e01b90608401610ea3565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156112e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611307919061185c565b6113119190611bbd565b6040516001600160a01b038516602482015260448101829052909150610a1d90859063095ea7b360e01b90606401610ea3565b60608161135281601f611bbd565b1015611371576040516323d5783d60e11b815260040160405180910390fd5b61137b8284611bbd565b8451101561139c57604051633b99b53d60e01b815260040160405180910390fd5b6060821580156113bb5760405191506000825260208201604052611405565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156113f45780518352602092830192016113dc565b5050858452601f01601f1916604052505b50949350505050565b606061141d8484600085611425565b949350505050565b6060824710156114865760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103ce565b600080866001600160a01b031685876040516114a29190611bd0565b60006040518083038185875af1925050503d80600081146114df576040519150601f19603f3d011682016040523d82523d6000602084013e6114e4565b606091505b50915091506114f587838387611500565b979650505050505050565b6060831561156f578251600003611568576001600160a01b0385163b6115685760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ce565b508161141d565b61141d83838151156115845781518083602001fd5b8060405162461bcd60e51b81526004016103ce9190611af6565b6000602082840312156115b057600080fd5b813563ffffffff8116811461040957600080fd5b60008083601f8401126115d657600080fd5b50813567ffffffffffffffff8111156115ee57600080fd5b60208301915083602082850101111561160657600080fd5b9250929050565b6001600160a01b038116811461162257600080fd5b50565b80356116308161160d565b919050565b600080600080600080600080600060c08a8c03121561165357600080fd5b8935985060208a013567ffffffffffffffff8082111561167257600080fd5b61167e8d838e016115c4565b909a50985060408c013591508082111561169757600080fd5b6116a38d838e016115c4565b909850965060608c013591506116b88261160d565b90945060808b0135935060a08b013590808211156116d557600080fd5b818c0191508c601f8301126116e957600080fd5b8135818111156116f857600080fd5b8d60208260051b850101111561170d57600080fd5b6020830194508093505050509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b818103818111156104b9576104b9611726565b634e487b7160e01b600052603260045260246000fd5b6000823560de1983360301811261177b57600080fd5b9190910192915050565b60006020828403121561179757600080fd5b81356104098161160d565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60c0815260006117df60c083018a8c6117a2565b82810360208401526117f281898b6117a2565b6001600160a01b03978816604085015295909616606083015250608081019290925260a09091015295945050505050565b80820281158282048414176104b9576104b9611726565b60008261185757634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561186e57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156118ae576118ae611875565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156118dd576118dd611875565b604052919050565b600067ffffffffffffffff8211156118ff576118ff611875565b50601f01601f191660200190565b600082601f83011261191e57600080fd5b813561193161192c826118e5565b6118b4565b81815284602083860101111561194657600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461162257600080fd5b803561163081611963565b600060e0823603121561198e57600080fd5b61199661188b565b61199f83611625565b81526119ad60208401611625565b60208201526119be60408401611625565b60408201526119cf60608401611625565b60608201526080830135608082015260a083013567ffffffffffffffff8111156119f857600080fd5b611a043682860161190d565b60a083015250611a1660c08401611971565b60c082015292915050565b6000808335601e19843603018112611a3857600080fd5b83018035915067ffffffffffffffff821115611a5357600080fd5b60200191503681900382131561160657600080fd5b60008085851115611a7857600080fd5b83861115611a8557600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015611aba5780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b60005b83811015611aed578181015183820152602001611ad5565b50506000910152565b6020815260008251806020840152611b15816040850160208701611ad2565b601f01601f19169190910160400192915050565b600060208284031215611b3b57600080fd5b815167ffffffffffffffff811115611b5257600080fd5b8201601f81018413611b6357600080fd5b8051611b7161192c826118e5565b818152856020838501011115611b8657600080fd5b611b97826020830160208601611ad2565b95945050505050565b600060208284031215611bb257600080fd5b815161040981611963565b808201808211156104b9576104b9611726565b6000825161177b818460208701611ad256fea26469706673582212204fe94b3db71a6c6f15d421772be09df838a8da07ee00e5a28104f173aa124da764736f6c63430008110033";

type GenericSwapFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericSwapFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericSwapFacet__factory extends ContractFactory {
  constructor(...args: GenericSwapFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericSwapFacet> {
    return super.deploy(overrides || {}) as Promise<GenericSwapFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericSwapFacet {
    return super.attach(address) as GenericSwapFacet;
  }
  override connect(signer: Signer): GenericSwapFacet__factory {
    return super.connect(signer) as GenericSwapFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericSwapFacetInterface {
    return new utils.Interface(_abi) as GenericSwapFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericSwapFacet {
    return new Contract(address, _abi, signerOrProvider) as GenericSwapFacet;
  }
}
